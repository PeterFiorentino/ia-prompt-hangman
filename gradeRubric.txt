Overall I feel like you are headed in the right direction!
Many of your functions are exactly what we're looking for, but because of the issue in the isValidGuess function, the game never really gets started.
I commented on your code a few pointers as well as resources to fix the issues. 
Impliment these into your code and I'll gladly regrade the assignment. 
Don't hesitate to reach out if the comments or resources are confusing!

Grading rubric:

User Stories:

1) As a user, I should be presented with a random word to guess
    Acceptance criteria
        -The computer should pick a word at random from the list below
        -The user should see a number of _ characters equal to the number of letters in the word (ex. A _ _ L E, for apple)
    
    Score: 1pt
            -The coputer picks a random word from the list, but the user is not presented with the random word until after they start guessing.

2) As a user, I should be able to enter guesses
    Acceptance criteria   
        -Handle invalid guesses by displaying a message and having the user enter a different guess. Invalid guesses don't count against the guess count.
        -After each guess, the user should see the new updated word, replacing all _ with letters they have guessed
        -After each guess, the user should see the letters they have guessed already

    Score: 1pt
            -You handle invalid guesses, but your program is considering any input to be invalid. Once you fix that issue you are correctly replacing guessed letters with their corresponding "_"
             but the user never sees the letters they have already guessed.

3) As a user, I should know how many guesses I have left
    Acceptance criteria
        -At the beginning of the game, the number of guesses remaining should be visible
        -After each guess, the updated number of guesses should be visible

    Score: 0pt
            -The game takes every input as invalid so no guesses are ever taken into effect.
            -Once isValidGuess() is fixed, your logic shows that the number of guesses are updated and visible after each guess, but they are not presented in the beginning of the game.

4) As a user, I should know when I win or lose and see the correct answer.
    Acceptance criteria 
        -The game should continue until the user has won or lost
        -Once the full word is guessed, the game should display how many guesses it took and display a victory message
        -If the user runs out of guesses, the full word should be revealed and the game should display a defeat message

    Score: 0pt
            -The game takes every input as invalid so no guesses are ever taken into effect.
            -You have written a line for a victory and defeated message but it does not include the number of guesses nor reveal the word.
            -These messages are also outside of the scope of gameplay so they never hit, even if isValidGuess() is corrected.

Total User Stories Score: 2pts


Learning Standards

M1.3: Define and call functions 
    Score: 2pts Proficient
            -I saw clear understanding in your ability to both create and use functions.
            -I enjoyed how you made smaller functions that perform a single task.

M1.4 Use control flow to create different code paths or to repeat code execution
    Score: 2pts Proficient
            -Keeping your Board and your dictionary separate were clear indicators that you were creating multiple paths.

M1.5 Solve problems using strings
    Score : 2pts Proficient
            -Use of the .includes, .split, and looping through strings showed clear understanding
            -Check out the resource I added on .toLowerCase to bump this up!

M1.6 Solve Problems using Arrays
    Score: 2pts Proficient
            -Your understanding of array indicies, loops, and methods is clear
            -I really enjoyed seeing you creating an array of "_"s based off the length of magicWord without using the traditional for loop.



Overall notes:
    I feel like you have a good grasp on the logic that goes into this game as well on how to code each smaller function. Unfortunately the issue with isValidGuess prevents the game from ever truly being played.
    I would have also liked to see a bit more attention to detail. Your game is missing a lot of the smaller points that are outlined in the assignment.
    Let me know when you've made some changes and I'll gladly regrade!